#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

install() {
  local PACKAGES=("bash" "bash-completion" "make" "htop" "openssl" "curl" "ncdu" "jq")

  cat >"${HOME}/.bash_profile" <<END_OF_BASH_PROFILE
#!/usr/bin/env bash

if [[ -f "${HOME}/.bashrc" ]]; then
  source "${HOME}/.bashrc"
fi
END_OF_BASH_PROFILE

  if [[ ${OSTYPE} =~ ^darwin ]]; then
    local SCRIPT_DIR
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

    if ! command -v brew >/dev/null 2>&1; then
      /bin/bash -c "$(curl --disable --silent --show-error --location https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      source "${SCRIPT_DIR}/../sources/_homebrew"
    fi

    packages_update
    packages_install "${PACKAGES[@]}" fswatch jdupes

    if [[ $(grep --count "$(brew --prefix)" "/etc/shells") -eq 0 ]]; then
      printf "+-------------------------+\n"
      printf "| changing shell for user |\n"
      printf "+-------------------------+\n"

      printf "%s/bin/bash\n" "$(brew --prefix)" | sudo tee -a "/etc/shells" >/dev/null
      chsh -s "$(brew --prefix)/bin/bash" -u "$(whoami)"
    fi
  elif command -v apt-get >/dev/null 2>&1; then
    packages_update
    packages_install "apt-transport-https"
    packages_install "${PACKAGES[@]}" dnsutils jdupes
  elif command -v pacman >/dev/null 2>&1; then
    packages_update
    packages_install "${PACKAGES[@]}" inetutils
  fi
}
