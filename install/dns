#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

install() {
  local DNSMASQ_CONF="/etc/dnsmasq.conf"
  local LISTEN_ADDRESS="127.0.0.1"

  local DNSCRYPT_PROXY_VERSION="2.1.1"

  local OS
  OS="$(normalized_os "macos")"

  local EXTENSION="tar.gz"
  if [[ ${OS} == "macos" ]]; then
    EXTENSION="zip"
  fi

  packages_install dnsmasq
  archive_to_binary "https://github.com/DNSCrypt/dnscrypt-proxy/releases/download/${DNSCRYPT_PROXY_VERSION}/dnscrypt-proxy-${OS}_$(normalized_arch "" "arm" "arm64")-${DNSCRYPT_PROXY_VERSION}.${EXTENSION}" "dnscrypt-proxy"

  if command -v brew >/dev/null 2>&1; then
    DNSMASQ_CONF="$(brew --prefix)/etc/dnsmasq.conf"
  fi

  echo "listen-address=${LISTEN_ADDRESS}
bind-interfaces

server=127.0.0.1#40

# Never forward plain (local) names
domain-needed

# Never forward addresses in the non-routed address spaces
bogus-priv

# Reject private addresses from upstream nameservers
stop-dns-rebind
rebind-localhost-ok

# Query servers in order
no-resolv
no-hosts
strict-order

# Set the size of the cache
# The default is to keep 150 hostnames
cache-size=8192

# Optional logging directives
log-async
log-dhcp
log-facility=/var/log/dnsmasq.log" | sudo tee "${DNSMASQ_CONF}" >/dev/null

  echo "" | sudo tee "${DNSMASQ_CONF}" >/dev/null

  if command -v dnscrypt-proxy >/dev/null 2>&1; then
    if [[ -e "/Library/LaunchDaemons/dnscrypt-proxy.plist" ]]; then
      sudo dnscrypt-proxy -config "${HOME}/.dnscrypt-proxy.toml" -service restart
    else
      sudo dnscrypt-proxy -config "${HOME}/.dnscrypt-proxy.toml" -service install
      sudo dnscrypt-proxy -config "${HOME}/.dnscrypt-proxy.toml" -service start
    fi
  fi

  if command -v brew >/dev/null 2>&1; then
    sudo brew services start dnsmasq
    sudo networksetup -setdnsservers "Wi-Fi" 127.0.0.1

    scutil --dns
    networksetup -getdnsservers "Wi-Fi"
  elif command -v systemctl >/dev/null 2>&1; then
    sudo systemctl enable dnsmasq
    sudo systemctl restart dnsmasq
  fi

  if command -v resolvconf >/dev/null 2>&1; then
    if [[ -d /etc/NetworkManager/ ]]; then
      printf "dns=none\n" | sudo tee "/etc/NetworkManager/NetworkManager.conf" >/dev/null
    fi

    echo "resolv_conf=/etc/resolv.conf
name_servers=127.0.0.1" | sudo tee "/etc/resolvconf.conf" >/dev/null
    sudo resolvconf -u
  fi
}
