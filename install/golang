#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

script_dir() {
  local FILE_SOURCE="${BASH_SOURCE[0]}"

  if [[ -L ${FILE_SOURCE} ]]; then
    dirname "$(readlink "${FILE_SOURCE}")"
  else
    (
      cd "$(dirname "${FILE_SOURCE}")" && pwd
    )
  fi
}

clean() {
  if [[ -n ${GOPATH:-} ]]; then
    rm -rf "${GOPATH}"
    mkdir -p "${GOPATH}"
  fi

  rm -rf "${HOME}/.dlv"
  rm -rf "${HOME}/opt/go"
  rm -rf "${HOME}/pprof"
  rm -rf "${HOME}/.mc"
}

install() {
  local GO_VERSION="1.18"

  local ARCH
  ARCH="$(normalized_arch "amd64" "armv6l" "arm64")"

  local OS
  OS="$(normalized_os)"

  if [[ ! -d "${HOME}/opt/go" ]]; then
    local GO_ARCHIVE
    GO_ARCHIVE="go${GO_VERSION}.${OS}-${ARCH}.tar.gz"

    curl --disable --silent --show-error --location --max-time 300 --remote-name "https://dl.google.com/go/${GO_ARCHIVE}"
    tar -C "${HOME}/opt" -xzf "${GO_ARCHIVE}"
    rm -rf "${GO_ARCHIVE}"
  fi

  local SCRIPT_DIR
  SCRIPT_DIR="$(script_dir)"
  source "${SCRIPT_DIR}/../sources/_golang"
  mkdir -p "${GOPATH}"

  packages_install graphviz

  if command -v go >/dev/null 2>&1; then
    if [[ ${ARCH} == "amd64" ]]; then
      go install "github.com/go-delve/delve/cmd/dlv@latest"
    fi

    go install "github.com/golang/mock/mockgen@latest"
    # go install "github.com/google/go-jsonnet/cmd/jsonnet@latest"
    go install "github.com/kisielk/errcheck@latest"
    go install "github.com/tsenart/vegeta@latest"
    go install "golang.org/x/lint/golint@latest"
    go install "golang.org/x/tools/cmd/goimports@latest"
    go install "golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment@latest"
    go install "mvdan.cc/gofumpt@latest"
  fi

  local GOLANGCI_LINT_VERSION="1.45.0"
  archive_to_binary "https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-${OS}-${ARCH}.tar.gz" "golangci-lint-${GOLANGCI_LINT_VERSION}-${OS}-${ARCH}/golangci-lint"

  golangci-lint completion bash >"${SCRIPT_DIR}/../sources/golangci-lint-completion"
}
