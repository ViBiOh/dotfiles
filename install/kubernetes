#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

script_dir() {
  local FILE_SOURCE="${BASH_SOURCE[0]}"

  if [[ -L ${FILE_SOURCE} ]]; then
    dirname "$(readlink "${FILE_SOURCE}")"
  else
    (
      cd "$(dirname "${FILE_SOURCE}")" && pwd
    )
  fi
}

clean() {
  rm -rf "${HOME}/.kube"
}

install() {
  local SCRIPT_DIR
  SCRIPT_DIR="$(script_dir)"

  local OS
  OS="$(normalized_os)"
  local ARCH
  ARCH="$(normalized_arch "amd64" "arm" "arm64")"

  if [[ -e "${HOME}/.kube/config" ]]; then
    chmod 0600 "${HOME}/.kube/config"
  fi

  local KUBERNETES_VERSION
  KUBERNETES_VERSION="$(curl --disable --silent --show-error --location --max-time 30 "https://storage.googleapis.com/kubernetes-release/release/stable.txt")"

  curl_to_binary "https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/${OS}/${ARCH}/kubectl" "kubectl"
  kubectl completion bash >"${SCRIPT_DIR}/../sources/kubectl-completion"

  # renovate: datasource=github-releases depName=helm/helm
  local HELM_VERSION="v3.11.1"

  archive_to_binary "https://get.helm.sh/helm-${HELM_VERSION}-${OS}-${ARCH}.tar.gz" "${OS}-${ARCH}/helm"
  if command -v helm >/dev/null 2>&1; then
    helm completion bash >"${SCRIPT_DIR}/../sources/helm-completion"
  else
    var_error "helm was not found in path. Please run 'helm completion bash >'${SCRIPT_DIR}/../sources/helm-completion'"
  fi

  # renovate: datasource=github-releases depName=fluxcd/flux2
  local FLUX_VERSION="v0.40.0"
  archive_to_binary "https://github.com/fluxcd/flux2/releases/download/${FLUX_VERSION}/flux_${FLUX_VERSION#v}_${OS}_${ARCH}.tar.gz" "flux"
  flux completion bash >"${SCRIPT_DIR}/../sources/flux-completion"

  # renovate: datasource=github-releases depName=bitnami-labs/sealed-secrets
  local KUBESEAL_VERSION="v0.19.5"
  archive_to_binary "https://github.com/bitnami-labs/sealed-secrets/releases/download/${KUBESEAL_VERSION}/kubeseal-${KUBESEAL_VERSION#v}-${OS}-${ARCH}.tar.gz" "kubeseal"

  # renovate: datasource=github-releases depName=ViBiOh/kmux
  local KMUX_VERSION="v0.3.1"
  curl_to_binary "https://github.com/ViBiOh/kmux/releases/download/${KMUX_VERSION}/kmux_${OS}_${ARCH}" "kmux"
  kmux completion bash >"${SCRIPT_DIR}/../sources/kmux-completion"
}

credentials() {
  extract_secret "infra/kube" ".kube/config"
}
