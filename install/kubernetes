#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

install() {
  local SCRIPT_DIR
  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

  local OS
  OS="$(normalized_os)"
  local ARCH
  ARCH="$(normalized_arch "amd64" "arm" "arm64")"

  if [[ -e "${HOME}/.kube/config" ]]; then
    chmod 0600 "${HOME}/.kube/config"
  fi

  local KUBERNETES_VERSION
  KUBERNETES_VERSION="$(curl --disable --silent --show-error --location --max-time 30 "https://storage.googleapis.com/kubernetes-release/release/stable.txt")"

  curl_to_binary "https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/${OS}/${ARCH}/kubectl" "kubectl"
  kubectl completion bash >"${SCRIPT_DIR}/../sources/kubectl-completion"

  local HELM_VERSION="v3.5.2"
  archive_to_binary "https://get.helm.sh/helm-${HELM_VERSION}-${OS}-${ARCH}.tar.gz" "${OS}-${ARCH}/helm"
  if command -v helm >/dev/null 2>&1; then
    helm completion bash >"${SCRIPT_DIR}/../sources/helm-completion"
  else
    printf "%bhelm was not found in path. Please run 'helm completion bash >'%s/../sources/helm-completion''%b\n" "${RED}" "${SCRIPT_DIR}" "${RESET}"
  fi

  local FLUX_VERSION="0.8.2"
  archive_to_binary "https://github.com/fluxcd/flux2/releases/download/v${FLUX_VERSION}/flux_${FLUX_VERSION}_${OS}_${ARCH}.tar.gz" "flux"
  flux completion bash >"${SCRIPT_DIR}/../sources/flux-completion"

  local STERN_VERSION="1.14.0"
  archive_to_binary "https://github.com/stern/stern/releases/download/v${STERN_VERSION}/stern_${STERN_VERSION}_${OS}_${ARCH}.tar.gz" "stern_${STERN_VERSION}_${OS}_${ARCH}/stern"
  stern --completion bash >"${SCRIPT_DIR}/../sources/stern-completion"

  local KUBESEAL_VERSION="v0.13.1"
  curl_to_binary "https://github.com/bitnami-labs/sealed-secrets/releases/download/${KUBESEAL_VERSION}/kubeseal-${OS}-${ARCH}" "kubeseal"
}
