#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

clean() {
  rm -rf "${HOME}/.terraform"*
}

credentials() {
  if ! command -v pass >/dev/null 2>&1; then
    exit
  fi

  local PASS_DIR="${PASSWORD_STORE_DIR:-${HOME}/.password-store}"
  local TERRAFORM_PASS
  TERRAFORM_PASS="$(find "${PASS_DIR}" -name "*terraform.gpg" -print | sed -e "s|${PASS_DIR}/\(.*\)\.gpg$|\1|")"

  if [[ -n ${TERRAFORM_PASS:-} ]]; then
    local TERRAFORM_TOKEN
    TERRAFORM_TOKEN="$(pass show "${TERRAFORM_PASS}" | grep token | awk '{print $2}')"

    echo "credentials \"app.terraform.io\" {
  token = \"${TERRAFORM_TOKEN}\"
}
" >>"${HOME}/.terraformrc"
  fi
}

install_provider() {
  local PLUGIN_DIR="${HOME}/.terraform.d/plugins/${OS}_${ARCH}/"
  local BINARY_NAME="${1}_${2}"

  printf "Installing %s into %s\n" "${BINARY_NAME}" "${PLUGIN_DIR}"

  mkdir -p "${PLUGIN_DIR}"
  curl -q -sSL --max-time 300 -o "${PLUGIN_DIR}/${BINARY_NAME}" "${3}"
  chmod +x "${PLUGIN_DIR}/${BINARY_NAME}"
}

install() {
  local TERRAFORM_VERSION="0.12.9"

  local OS
  OS="$(uname -s | tr "[:upper:]" "[:lower:]")"
  local ARCH
  ARCH="$(uname -m | tr "[:upper:]" "[:lower:]")"

  if [[ ${ARCH} == "x86_64" ]]; then
    ARCH="amd64"
  elif [[ ${ARCH} =~ ^armv.l$ ]]; then
    ARCH="arm"
  fi

  archive_to_binary "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_${OS}_${ARCH}.zip" "terraform"

  mkdir -p "${HOME}/.terraform.d/plugin-cache"
  echo "plugin_cache_dir = \"${HOME}/.terraform.d/plugin-cache\"
" >"${HOME}/.terraformrc"

  local ANSIBLEVAULT_VERSION="v2.1.0"
  install_provider "terraform-provider-ansiblevault" "${ANSIBLEVAULT_VERSION}" "https://github.com/MeilleursAgents/terraform-provider-ansiblevault/releases/download/${ANSIBLEVAULT_VERSION}/terraform-provider-ansiblevault_${OS}_${ARCH}_${ANSIBLEVAULT_VERSION}"
}
