#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

clean() {
  if command -v gpgconf >/dev/null 2>&1; then
    gpgconf --kill gpg-agent
  fi
}

install() {
  packages_install gnupg yubikey-personalization hopenpgp-tools ykman

  if [[ ${OSTYPE} =~ ^darwin ]]; then
    packages_install pinentry-mac
  fi

  if ! command -v gpg >/dev/null 2>&1; then
    return
  fi

  mkdir -p "${HOME}/.gnupg"
  chmod 700 "${HOME}/.gnupg"

  echo "enable-ssh-support
default-cache-ttl 3600
max-cache-ttl 3600
pinentry-program ${BREW_PREFIX}/bin/pinentry-mac" >"${HOME}/.gnupg/gpg-agent.conf"

  echo "personal-cipher-preferences AES256 AES192 AES
personal-digest-preferences SHA512 SHA384 SHA256
personal-compress-preferences ZLIB BZIP2 ZIP Uncompressed
default-preference-list SHA512 SHA384 SHA256 AES256 AES192 AES ZLIB BZIP2 ZIP Uncompressed
cert-digest-algo SHA512
s2k-digest-algo SHA512
s2k-cipher-algo AES256
charset utf-8
fixed-list-mode
no-comments
no-emit-version
no-greeting
keyid-format 0xlong
list-options show-uid-validity
verify-options show-uid-validity
with-fingerprint
require-cross-certification
no-symkey-cache
use-agent
throw-keyids
keyserver hkps://keys.openpgp.org" >"${HOME}/.gnupg/gpg.conf"

}

credentials() {
  local KEY_ID="DD539006C49CAB71"

  if ! gpg --list-keys "${KEY_ID}"; then
    gpg --receive-keys --keyserver "hkps://keys.openpgp.org" "${KEY_ID}"
  fi
}
