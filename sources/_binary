#!/usr/bin/env bash

archive_to_binary() {
  if [[ ${#} -ne 2 ]]; then
    printf "%bUsage: download_tar [URL] [BINARY_PATH]%b\n" "${RED}" "${RESET}"
    return 1
  fi

  local ARCHIVE_URL="${1}"
  local ARCHIVE_FILENAME
  local ARCHIVE_EXTENSION
  if [[ ${ARCHIVE_URL} =~ .*\/(.*)\.(tar\.gz|zip) ]]; then
    ARCHIVE_FILENAME="${BASH_REMATCH[1]}"
    ARCHIVE_EXTENSION="${BASH_REMATCH[2]}"
  else
    printf "%bdownload_tar: unable to extract archive filename and extension from '%s'%b\n" "${RED}" "${URL}" "${RESET}"
    return 1
  fi

  local TEMP_FOLDER="/tmp"
  local ARCHIVE_PATH="${TEMP_FOLDER}/${ARCHIVE_FILENAME}.${ARCHIVE_EXTENSION}"

  curl -q -sSL --max-time 300 -o "${ARCHIVE_PATH}" "${ARCHIVE_URL}"
  (
    cd "${TEMP_FOLDER}" || false
    mkdir -p "${ARCHIVE_FILENAME}"

    if [[ ${ARCHIVE_EXTENSION} == "tar.gz" ]]; then
      tar xzf "${ARCHIVE_PATH}" -C "${ARCHIVE_FILENAME}"
    elif [[ ${ARCHIVE_EXTENSION} == "zip" ]]; then
      unzip "${ARCHIVE_PATH}" -d "${ARCHIVE_FILENAME}"
    fi

    mv "${ARCHIVE_FILENAME}/${2}" "${HOME}/opt/bin/"
    rm -rf "${ARCHIVE_PATH}" "${ARCHIVE_FILENAME}"
  )
}
