#!/usr/bin/env bash

if command -v docker >/dev/null 2>&1; then
  export DOCKER_CONTENT_TRUST="1"
  export DOCKER_CLI_EXPERIMENTAL="enabled"

  docker_clean() {
    local DOCKER_ROOT_DIR
    DOCKER_ROOT_DIR="$(docker info --format '{{ .DockerRootDir }}')"

    if [[ -z ${DOCKER_ROOT_DIR:-} ]]; then
      var_warning 'docker seems not available, no `docker info` output'
    fi

    if [[ ! -d ${DOCKER_ROOT_DIR} ]]; then
      DOCKER_ROOT_DIR="/"
    fi

    local GIGABYTES_BLOCK_SIZE="$((1024 * 1024 * 1024))"

    local AVAILABLE_BEFORE
    AVAILABLE_BEFORE="$(sync && BLOCKSIZE="${GIGABYTES_BLOCK_SIZE}" df -- "${DOCKER_ROOT_DIR}" | tail -1 | awk '{print $4}')"

    docker system prune -a --volumes -f

    docker images -q | xargs docker rmi -f
    docker images --format '{{ .Repository }}:{{ .Tag}}' | xargs docker rmi -f
    docker network ls -q | xargs docker network rm
    docker volume ls -q | xargs docker volume rm

    local AVAILABLE_AFTER
    AVAILABLE_AFTER="$(sync && BLOCKSIZE="${GIGABYTES_BLOCK_SIZE}" df -- "${DOCKER_ROOT_DIR}" | tail -1 | awk '{print $4}')"

    local AVAILABLE_RECLAIMED="$((AVAILABLE_AFTER - AVAILABLE_BEFORE))"
    var_info "Total reclaimed space: ${AVAILABLE_RECLAIMED}GB"
  }
fi
