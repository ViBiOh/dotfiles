#!/usr/bin/env bash

if ! command -v fzf > /dev/null 2>&1; then
  return
fi

if command -v git > /dev/null 2>&1; then
  function gitco() {
    local branch=`git branch -vv --all | fzf --ansi --reverse -q "${1}" -1`

    if [ -n "${branch}" ]; then
      git checkout `echo ${branch} | awk '{print $1}' | sed 's|^remotes/origin/||'`
    fi
  }

  function gitlg() {
    git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' | fzf --ansi --reverse --tiebreak=index --no-sort --preview 'f() { set -- $(echo -- "$@" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || git show --color=always $1; }; f {}'
  }
fi

if command -v pass > /dev/null 2>&1; then
  function passfor() {
    local PASS_DIR=${PASSWORD_STORE_DIR-~/.password-store}
    local file=`find "${PASS_DIR}" -name "*.gpg" -print | sed -e "s|${PASS_DIR}/\(.*\)\.gpg$|\1|" | fzf --reverse -q "${1}" -1`

    if [ -n "${file}" ]; then
      pass -c "${file}"
    fi
  }

  function otpfor() {
    local PASS_DIR=${PASSWORD_STORE_DIR-~/.password-store}
    local file=`find "${PASS_DIR}" -name "*.gpg" -print | sed -e "s|${PASS_DIR}/\(.*\)\.gpg$|\1|" | fzf --reverse -q "${1}" -1`

    if [ -n "${file}" ]; then
      pass otp -c "${file}"
    fi
  }
fi
