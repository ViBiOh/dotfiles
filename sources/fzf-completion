#!/usr/bin/env bash

if ! command -v fzf > /dev/null 2>&1; then
  return
fi

if command -v git > /dev/null 2>&1; then
  function git_lg_preview() {
    fzf --ansi --reverse --tiebreak=index --no-sort --preview 'f() { set -- $(echo -- "$@" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || git show --color=always $1; }; f {}'
  }
fi

if command -v pass > /dev/null 2>&1 && command -v rg > /dev/null 2>&1; then
  _fzf_complete_pass() {
    FZF_COMPLETION_TRIGGER='' _fzf_complete '-1' "$@" < <(
      local PASS_DIR=${PASSWORD_STORE_DIR-~/.password-store}
      rg --files --glob '*.gpg' "${PASS_DIR}" | sed -e "s|${PASS_DIR}/\(.*\)\.gpg$|\1|"
    )
  }
  [ -n "${BASH}" ] && complete -F _fzf_complete_pass -o default -o bashdefault pass

  function passfor() {
    local PASS_DIR=${PASSWORD_STORE_DIR-~/.password-store}
    local file=`rg --files --glob '*.gpg' "${PASS_DIR}" | sed -e "s|${PASS_DIR}/\(.*\)\.gpg$|\1|" | fzf --reverse -q "${1:-}" -1`

    if [ -n "${file}" ]; then
      pass -c "${file}"

      local hasOtp=`pass show "${file}" | grep '^otpauth:' | wc -l`
      if [ "${hasOtp}" -eq 1 ]; then
        read -s -p "  Press enter for otp"
        echo ""

        pass otp -c "${file}"
      fi
    fi
  }
fi

if command -v make > /dev/null 2>&1; then
  _fzf_complete_make() {
    FZF_COMPLETION_TRIGGER='' _fzf_complete '-1' "${@}" < <(make -rpn | sed -n -e '/^$/ { n ; /^[^ .#][^ ]*:/ { s/:.*$// ; p ; } ; }')
  }
  [ -n "${BASH}" ] && complete -F _fzf_complete_make -o default -o bashdefault make
fi

if command -v ssh > /dev/null 2>&1; then
  _fzf_complete_ssh_notrigger() {
    FZF_COMPLETION_TRIGGER='' _fzf_complete_ssh
  }
  [ -n "${BASH}" ] && complete -F _fzf_complete_ssh_notrigger -o default -o bashdefault ssh
fi
