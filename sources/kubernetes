#!/usr/bin/env bash

if command -v kubectl >/dev/null 2>&1; then
  __kube_ps1() {
    if [[ -n ${KUBE_PS1:-} ]]; then
      printf " ☸️ %s" "$(kubectl config current-context)"
    fi
  }

  if command -v fzf >/dev/null 2>&1; then
    kube() {
      if [[ ${#} -eq 0 ]] && [[ -n ${KUBE_PS1:-} ]]; then
        unset KUBE_PS1
        return
      fi

      export KUBE_PS1="true"

      case ${1:-} in
      "restart")
        kubectl get deployments --all-namespaces -o=jsonpath='{range .items[*]}{.metadata.namespace} {.metadata.name}{"\n"}{end}' | fzf --ansi --reverse -1 -q "${2:-}" | xargs -n 2 bash -c 'kubectl -n ${0} rollout restart deployment ${1}'
        ;;

      "logs")
        kubectl get deployments --all-namespaces -o=jsonpath='{range .items[*]}{.metadata.namespace} {.metadata.name}{"\n"}{end}' | fzf --ansi --reverse -1 -q "${2:-}" | xargs -n 2 bash -c 'kubectl -n ${0} logs deployments/${1} -f'
        ;;

      "watch")
        kubectl get pods -A -w
        ;;

      *)
        kubectl config get-contexts -o name | fzf --ansi --reverse -1 -q "${1:-}" | xargs kubectl config use-context
        ;;
      esac
    }
  fi

fi
