#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

browse_folder() {
  local PROJECTS_DIR=${1}
  local NAME_PREFIX=${2:-}

  while IFS= read -r -d '' dir; do
    (
      cd "${dir}" || return
      if ! git_is_inside || [[ $(pwd) != $(git_root) ]]; then
        return
      fi

      local projectName="${dir##${PROJECTS_DIR}}"
      projectName="${projectName#/}"
      projectName="${projectName////_}"

      if [[ -n ${NAME_PREFIX} ]]; then
        projectName="${NAME_PREFIX}_${projectName}"
      fi

      var_info "Adding ${projectName}"

      fileName="${PROJECT_FOLDER}/${projectName}.sublime-project"
      jq -c -n --arg path "${dir}" '{folders: [{path: $path}]}' >"${fileName}"
      subl --project "${fileName}"
    )
  done < <(find "${1}" -type d -maxdepth 1 -print0)
}

main() {
  readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
  local PROJECT_FOLDER="${SCRIPT_DIR}/projects"

  if [[ -e "${SCRIPT_DIR}/../scripts/meta" ]]; then
    source "${SCRIPT_DIR}/../scripts/meta" && meta_init "var" "git"
  else
    printf "scripts' folder not found"
    return 1
  fi

  rm -rf "${PROJECT_FOLDER}"
  mkdir -p "${PROJECT_FOLDER}"

  browse_folder "${HOME}/code"
  browse_folder "${HOME}/workspace" "work"
}

main "${@}"
