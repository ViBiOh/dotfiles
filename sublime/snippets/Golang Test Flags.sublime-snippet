<snippet>
    <content><![CDATA[
func Test_Flags(t *testing.T) {
  var cases = []struct {
    intention string
    want      string
    wantType  string
  }{
    {
      `should add ${2:Type} ${1:Name} param to flags`,
      `${1:Name}`,
      `*${2:Type}`,
    },
  }

  for _, testCase := range cases {
    result := Flags(testCase.intention)[testCase.want]

    if result == nil {
      t.Errorf("%s\nFlags() = %+v, want `%s`", testCase.intention, result, testCase.want)
    }

    if fmt.Sprintf(`%T`, result) != testCase.wantType {
      t.Errorf("%s\nFlags() = `%T`, want `%s`", testCase.intention, result, testCase.wantType)
    }
  }
}

]]></content>
    <tabTrigger>gtf</tabTrigger>
    <scope>source.go</scope>
    <description>Golang Test Flags</description>
</snippet>
