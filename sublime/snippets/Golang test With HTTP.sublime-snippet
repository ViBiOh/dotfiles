<snippet>
		<content><![CDATA[
func Test_${1:FuncName}(t *testing.T) {
	var cases = []struct {
		intention string
		request    *http.Request
		want       string
		wantStatus int
	}{
		{
			"should work with given params",
			httptest.NewRequest(http.MethodGet, "/", nil),
			"",
			http.StatusOK,
		},
	}

	for _, testCase := range cases {
			writer := httptest.NewRecorder()

			${1:FuncName}(writer, testCase.request)

			if result := writer.Code; result != testCase.wantStatus {
				t.Errorf("%s\n${1:FuncName}(%+v) = %d, want status %d", testCase.intention, testCase.request, result, testCase.wantStatus)
			}

			if result, _ := request.ReadBody(writer.Result().Body); string(result) != testCase.want {
				t.Errorf("%s\n${1:FuncName}(%+v) = `%s`, want `%s`", testCase.intention, testCase.request, string(result), testCase.want)
			}
	}
}

]]></content>
		<tabTrigger>gth</tabTrigger>
		<scope>source.go -(meta)</scope>
		<description>Golang Test with HTTP</description>
</snippet>
