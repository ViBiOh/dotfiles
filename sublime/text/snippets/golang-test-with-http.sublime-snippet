<snippet>
	<content><![CDATA[
import "github.com/stretchr/testify/assert"

func Test${1:FuncName}(t *testing.T) {
	t.Parallel()

	cases := map[string]struct {
		request    *http.Request
		want       string
		wantStatus int
		wantHeader http.Header
	}{
		"simple": {
			httptest.NewRequest(http.MethodGet, "/", nil),
			"",
			http.StatusOK,
			http.Header{},
		},
	}

	for intention, testCase := range cases {
		t.Run(intention, func(t *testing.T) {
			t.Parallel()

			writer := httptest.NewRecorder()
			${1:FuncName}(writer, testCase.request)

			actualStatus := writer.Code
			actualBody, _ := request.ReadBodyResponse(writer.Result())

			assert.Equal(t, testCase.wantStatus, actualStatus)
			assert.Equal(t, testCase.want, string(actualBody))

			for key := range testCase.wantHeader {
				assert.Equal(t, testCase.wantHeader.Get(key), writer.Header().Get(key))
			}
		})
	}
}

]]></content>
	<tabTrigger>gth</tabTrigger>
	<scope>source.go</scope>
	<description>Golang Test with HTTP</description>
</snippet>
