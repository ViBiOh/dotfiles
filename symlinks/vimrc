" Turnoff vi backward compatibility
set nocompatible

" vim-plug
call plug#begin('~/.vim/plugged')

Plug 'editorconfig/editorconfig-vim'
Plug 'airblade/vim-gitgutter'
Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

" Give more space for displaying messages.
set cmdheight=2

" Show status line
set laststatus=2

highlight StatusLine ctermfg=235 ctermbg=11
highlight User1 ctermfg=11 ctermbg=238
highlight User2 ctermfg=232 ctermbg=154
highlight User3 ctermfg=2 ctermbg=235
highlight clear SignColumn

set statusline=
set statusline+=%1*\ \%fÂ " Filename
set statusline+=%2*\%m" Modified
set statusline+=%*\%R " Read-Only indicator
set statusline+=%=
set statusline+=%3*\%y " Type of file
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=%1*\ %p%% " Percentage of the file
set statusline+=\ %l:%c " Line Number and Total Line
set statusline+=\  " Empty space at end

" Line highlight
set cursorline

" Show line numbers
set number

" Default file encoding
set encoding=utf-8

" Show current command combination on bottom right
set showcmd

" Confirm change save
set confirm

" Wrap lines
set wrap

" Spaces tab's width and indent size
set tabstop=2 shiftwidth=2
if exists(':filetype')
  filetype indent on
  filetype plugin on
endif

" Show matching parenthesis
set showmatch

" Insert spaces instead of tabs
set expandtab

" Backspace behavior for corresponding to most common apps
set backspace=indent,eol,start

" Hightlight search
set hlsearch

" SignColumn configuration
set signcolumn=number

" Clear highlight when pressing escape
nnoremap <esc> :noh<return><esc>
nnoremap <esc>^[ <esc>^[

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv

" Search as you type character
set incsearch

" Ignore case in search
set ignorecase

" Search with smart case (if uppercase provided, search is case sensitive)
set smartcase

" Omni completion
set completeopt=longest,menuone
set omnifunc=syntaxcomplete#Complete

" Auto reload file
set autoread

" Disable folding
set nofoldenable

" No bell
set visualbell
set noerrorbells

" Disable backup files
set nobackup
set nowritebackup
set noswapfile

" Increase update time
set updatetime=300

" Enable syntax color if exist
if exists(":syntax")
  syntax on
endif

" Change map leader if possible
if exists(":let")
  let mapleader=","
endif

" Navigation shortcut
nmap <silent> gb <C-o>

" Disabling viminfo
set viminfo=""

" Turn on the Wild menu, better suggestion
set wildmenu

" Be lazy when redrawing screen
set lazyredraw

" Printing whitespace characters differently
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

" Search using ctrl-p and fzf
set rtp+=~/opt/fzf
noremap <C-p> :FZF<return>

" coc.nvim configuration
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" vim-gutter configuration
highlight GitGutterAdd    guifg=#009900 ctermfg=2
highlight GitGutterChange guifg=#bbbb00 ctermfg=3
highlight GitGutterDelete guifg=#ff2222 ctermfg=1

" Using ripgrep for searching
if executable("rg")
  set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
  nnoremap <Leader>g :silent lgrep -P<Space>
endif

" Opening quickfix automatically
if exists(':autocmd')
  autocmd QuickFixCmdPost [^l]* nested cwindow
  autocmd QuickFixCmdPost    l* nested lwindow
endif

" Save file with sudo permission
if exists(':execute')
  command W :execute ':silent w !sudo tee % > /dev/null' | :edit!
endif
